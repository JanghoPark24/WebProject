<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="lectureRatings">
	<!--  get List<강의 평가> -->
<!-- 	<select id="getLRBList" parameterType="String"
		resultType="thelecture.model.Lecture_ratingBean">
		select * from lecture_rating 
		where lecture_id= #{lecture_id} 
		 and question_id=(select question_id from question where question_id=(select max(question_id) from question))
	</select> -->
	<!---->
	
	<select id="getRatedUsersPerLecture_byQuestionVersion" parameterType="hashMap"
		resultType="int">
		select count(*) from
		(select email from 
		my_rating
		where lecture_id =#{lecture_id} and
		question_version = #{question_version}
		group by email)
	</select>
	
	<!-- 문항마다 평균 점수 불러옴-->
	<select id="getLRBList" parameterType="String"
		resultType="thelecture.model.Lecture_ratingBean">
		SELECT * 
		from questionInfoOfLecture
		WHERE lecture_id =#{lecture_id} and
		question_version=#{question_version}
	</select>
	
	<!--  get List<질문> -->
	<select id="getQBList" parameterType="String"
		resultType="thelecture.model.QuestionBean">
		select * from question
		WHERE QUESTION_VERSION=
			(select question_version 
			from question 
			where question_id=
				(select max(question_id) from question))
	</select>

	<!--question List 출력-->
	<select id="getQBList_t" parameterType="String"
		resultType="thelecture.model.QuestionBean">
		SELECT * from question
		WHERE QUESTION_VERSION=
			(select question_version from
			lecture 
			where lecture_id=#{lecture_id})
		ORDER BY question_id
	</select>
	
	<!--question Count 출력 없을 경우 0-->
	 <select id="checkIsAlreadyAnsweredByThisEmail" parameterType="hashMap"
		resultType="int">
		SELECT count(*) from my_rating
		WHERE 
		lecture_id=#{lecture_id} and
		email = #{email} and
		question_version = #{question_version}
	</select>
	
	
	<insert id="insertAnswers" parameterType="question" >
		INSERT INTO MY_RATING
		VALUES(
			#{email},
			#{lecture_id},
			#{question_version},
			#{question_id},
			#{question_value},
			sysdate
		)
	</insert>
	
	<update id="updateAnswers" parameterType="question">
		UPDATE MY_RATING
		SET
		score=	#{question_value},
		rate_date=	sysdate
		WHERE
		email=#{email} and
		lecture_id=	#{lecture_id} and
		question_version=	#{question_version} and
		question_id=	#{question_id}
	</update>
	
	 

</mapper>
