<?xml version="1.0" encoding="UTF-8" ?>
 <!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="reply">
	
	<!--lecture_reply테이블고 upload파일 부분에서 가져옴 comment 정보와 image 불러옴-->
	
	<select id="getAllCommentsByLectureId" parameterType="int" resultType="reply">
		SELECT *
  		FROM
  		lecture_reply lr
  		LEFT OUTER JOIN (SELECT nickname,isdeleted, email, UPLOADEDFILE from memberView) m
		ON lr.email = m.email
  		WHERE
		lecture_id =#{lecture_id} and
		depth= 0
		order by reply_order desc  
		
	</select>
	<select id="checkEmailByReplyNum" parameterType="reply" resultType="int" >
		select count(*)
		FROM LECTURE_REPLY_LIKE
		WHERE reply_num = #{reply_num} and
		email = #{email}
		
	</select>
	<select id="checkLikeByEmailAndReplyNum" parameterType="reply" resultType="int" >
		select likes
		FROM LECTURE_REPLY_LIKE
		WHERE reply_num = #{reply_num} and
		email = #{email}
	</select>
	<select id="getRepliesOfCommentsByLectureId" parameterType="int" resultType="reply">
		SELECT *
  		FROM
  		lecture_reply lr
  		LEFT OUTER JOIN (SELECT nickname,isdeleted, email, UPLOADEDFILE from memberView) m
		ON lr.email = m.email
  		WHERE
		lecture_id =#{lecture_id} and
		depth &gt; 0
		order by reply_order desc
		
	</select>
	
	<select id="getReplyNumOfLastComment" parameterType="lecture" resultType="int">
		SELECT max(reply_num) from lecture_reply
		WHERE
		lecture_id =#{lecture_id}
		
	</select>
	<select id="getLectureCommentByReplyNum" parameterType="int" resultType="reply">
		SELECT * from lecture_reply
		WHERE
		reply_num =#{reply_num}
		
	</select>
	<select id="getReplyCountByLectureId" parameterType="int" resultType="int">
		SELECT count(reply_num) from lecture_reply
		WHERE
		lecture_id =#{lecture_id}
		
	</select>
	
<!-- 	<select id="getLikesByReplyNum" parameterType="int" resultType="int">
		SELECT sum(likes) from lecture_reply_like
		WHERE
		reply_num=#{reply_num}
	</select> -->
	<select id="getLikesByReplyNum" parameterType="int" resultType="int">
		SELECT likes from lecture_reply
		WHERE
		reply_num=#{reply_num}
	</select>
	<select id="getEmailByReplyNum" parameterType="int" resultType="String">
		SELECT email from lecture_reply
		WHERE
		reply_num=#{reply_num}
	</select>
	
	<!--새로운 댓글 입력
		
	-->
	<insert id="addNewComment" parameterType="reply">
		insert into lecture_reply
		values(seq_lecture_re_no.nextval,
				#{lecture_id},
				#{email},
				seq_lecture_re_no.currval,0,
				#{content},sysdate,'n',
				nvl((select max(reply_order)
					from lecture_reply
					where lecture_id=#{lecture_id})+1,0)
				,0 
				
		) 
	</insert>
	<insert id="addReplyToComment" parameterType="reply">
		
	    insert into lecture_reply
		values(seq_lecture_re_no.nextval,
				#{lecture_id},
				#{email},
				#{ref},
				1,
				#{content},sysdate,'n', #{reply_order}+1,
				0 
				
		)
	      
	</insert>
	<insert id="insertLikeToReplyCheck" parameterType="reply">
		
	    INSERT into 
	    LECTURE_REPLY_LIKE
	    VALUES(#{reply_num},#{email},#{likes})
	      
	</insert>
	<update id="update_likeToReply" parameterType="reply">
		
	    UPDATE 
	    LECTURE_REPLY
	    SET likes = likes + #{likes}
	    WHERE
	    reply_num =#{reply_num}
	</update>
	<!--order가 넘어온 order보다 높을 때 수정-->
	<update id="updateBeforeAddReply" parameterType="reply">
        update lecture_reply
        set reply_order = reply_order+1
        where lecture_id = #{lecture_id}
        and reply_order &gt; #{reply_order}
           
	</update>
	<update id="updateLikeReplyCheck" parameterType="reply">
        UPDATE LECTURE_REPLY_LIKE
	    SET
	    likes = #{likes}
	    WHERE
	    reply_num =#{reply_num} and
	    email =#{email}
	</update>
	<update id="cancelLikeInReplyCheck" parameterType="reply" >
        UPDATE LECTURE_REPLY_LIKE
	    SET
	    likes = 0
	    WHERE
	    reply_num =#{reply_num} and
	    email =#{email}
	</update>
	<update id="cancelLikeInReply" parameterType="reply" >
        UPDATE LECTURE_REPLY
	    SET
	    likes = likes -#{likes}
	    WHERE
	    reply_num =#{reply_num} 
	</update>

</mapper>








